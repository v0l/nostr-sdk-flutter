// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.7.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../frb_generated.dart';
import '../key/public_key.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'tag.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `deref`, `from`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<_EventId>>
abstract class EventId implements RustOpaqueInterface {
  /// Parse from bytes
  static EventId fromSlice({required List<int> bytes}) => NostrSdk.instance.api
      .crateApiProtocolEventIdEventIdFromSlice(bytes: bytes);

  factory EventId(
          {required PublicKey publicKey,
          required BigInt createdAt,
          required int kind,
          required List<Tag> tags,
          required String content}) =>
      NostrSdk.instance.api.crateApiProtocolEventIdEventIdNew(
          publicKey: publicKey,
          createdAt: createdAt,
          kind: kind,
          tags: tags,
          content: content);

  /// Try to parse event ID from `hex`, `bech32` or [NIP21](https://github.com/nostr-protocol/nips/blob/master/21.md) uri
  static EventId parse({required String id}) =>
      NostrSdk.instance.api.crateApiProtocolEventIdEventIdParse(id: id);

  /// Serialize to bech32
  String toBech32();

  /// Get bytes
  Uint8List toBytes();

  /// Serialize to hex
  String toHex();

  /// Serialize as nostr URI
  String toNostrUri();
}
